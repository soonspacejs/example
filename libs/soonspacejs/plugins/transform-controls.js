import{TransformControls as t}from"three/examples/jsm/controls/TransformControls.js";class o{constructor(t){this.ssp=t,this.control=null,this.options=null}start(o){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{mode:n="translate",onUpdate:e,onDragStart:l,onDragEnd:r}=s;return this.options=s,this.control=new t(this.ssp.viewport.camera,this.ssp.viewport.rendererManager.interactiveContainer),this.control.attach(o),this.control.setMode(n),this.control.addEventListener("dragging-changed",(t=>{this.ssp.viewport.controls.currentControls.enabled=!t.value,t.value?null==l||l(o):null==r||r(o)})),this.control.addEventListener("objectChange",(()=>{null==e||e(o),this.ssp.signals.objectChanged.dispatch(o)})),this.ssp.viewport.scene.add(this.control),this.control}close(){var t,o;this.control&&(this.ssp.removeObject(this.control),this.control.detach(),this.control=null,null===(o=null===(t=this.options)||void 0===t?void 0:t.onClose)||void 0===o||o.call(t))}changeMode(t){var o,s;t&&(null===(s=null===(o=this.control)||void 0===o?void 0:o.setMode)||void 0===s||s.call(o,t),this.ssp.signals.objectChanged.dispatch())}}export{o as default};
