import{TransformControls as e}from"three/examples/jsm/controls/TransformControls.js";class s{constructor(e){this.ssp=e,this.controls=new Set}start(s,t={}){const{mode:o="translate",onUpdate:n,onDragStart:r,onDragEnd:a,onClose:i}=t,l=new e(this.ssp.viewport.camera,this.ssp.viewport.rendererManager.interactiveContainer);return this.controls.add(l),l.attach(s),l.mode=o,l.addEventListener("dragging-changed",(e=>{this.ssp.controls.enabled=!e.value,e.value?null==r||r(s):null==a||a(s)})),l.addEventListener("objectChange",(()=>{null==n||n(s),this.ssp.signals.objectChanged.dispatch(s)})),l.addEventListener("removed",(()=>{null==i||i()})),this.ssp.viewport.scene.add(l),this.ssp.render(),l}_getPreviousControl(){return[...this.controls].at(-1)}close(e=this._getPreviousControl()){e&&(e.detach(),e.dispose(),this.ssp.removeObject(e),this.controls.delete(e))}closeAll(){this.controls.forEach((e=>this.close(e)))}changeMode(e=this._getPreviousControl(),s="translate"){e&&e.mode!==s&&(e.mode=s,this.ssp.signals.objectChanged.dispatch())}}export{s as default};
