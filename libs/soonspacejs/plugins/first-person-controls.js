import{Vector3 as t,Vector2 as e,Sphere as s,Box3 as i,Raycaster as a,Matrix4 as n,Euler as o,Quaternion as r}from"three";import h from"soonspacejs";function c(t,e){const s=h.utils.getBoundingBox(e);return t.intersectsBox(s)}function l(t,e){t.disableAll();for(const s of e)t.enable(s)}class p{get camera(){let t=this._camera;return t||(t=this._camera=this.viewport.cameraManager.createCamera("firstPersonCamera")),t}set camera(t){this._camera=t}get rotate(){return this._rotate&&(this.horizontalRotate||this.verticalRotate)}set rotate(t){this._rotate=t}constructor(a,n){this._camera=null,this.enabled=!1,this.rotationAngle={min:-Math.PI/2,max:Math.PI/2},this.state={moveForward:!1,moveBackward:!1,moveLeft:!1,moveRight:!1,moveUp:!1,moveDown:!1,canJump:!1,canRotate:!1},this.moveSpeed=10,this.gravitySpeed=10,this.jumpOffset=0,this.clashCheckDistance=200,this.clashDistance=50,this.eyeHeight=160,this.kneeHeight=50,this.jumpHeight=110,this.enableClash=!0,this.enableGravity=!0,this.reverseRotate=!1,this._rotate=!0,this.rotateSpeed=1,this.horizontalRotate=!0,this.verticalRotate=!0,this.dblClickForward=!1,this.velocity=new t,this.movement=new e,this._dblVector=new t,this._dblDeltaVector=new t,this._pointerId=null,this.lastDirection=new t,this.searchRadiusFactor=3,this.checkedSphere=new s,this.gravitySearchFactor=3,this.gravityCheckedObjects=null,this.gravityCheckedBox=new i,this.gravityInterObject=null,this.kneeInterObject=null,this.eyeInterObject=null,this.ssp=a,this._camera=null!=n?n:null,this.viewport=a.viewport,this.onKeyDown=this.onKeyDown.bind(this),this.onKeyUp=this.onKeyUp.bind(this),this.onDblClick=this.onDblClick.bind(this),this.onPointerDown=this.onPointerDown.bind(this),this.onPointerMove=this.onPointerMove.bind(this),this.onPointerUp=this.onPointerUp.bind(this)}onKeyDown(t){if(!1!==this.enabled){switch(t.code){case"ArrowUp":case"KeyW":this.state.moveForward=!0;break;case"ArrowLeft":case"KeyA":this.state.moveLeft=!0;break;case"ArrowDown":case"KeyS":this.state.moveBackward=!0;break;case"ArrowRight":case"KeyD":this.state.moveRight=!0;break;case"KeyI":this.state.canRotate=!0,this.movement.x=0,this.movement.y=-10;break;case"KeyJ":this.state.canRotate=!0,this.movement.x=-10,this.movement.y=0;break;case"KeyK":this.state.canRotate=!0,this.movement.x=0,this.movement.y=10;break;case"KeyL":this.state.canRotate=!0,this.movement.x=10,this.movement.y=0;break;case"KeyQ":this.state.moveUp=!0;break;case"KeyE":this.state.moveDown=!0;break;case"Space":!0===this.state.canJump&&!1===t.repeat&&(this.jumpOffset=this.jumpHeight),this.state.canJump=!1}(this.jumpOffset>0||Object.values(this.state).some((t=>t)))&&this.ssp.render()}}onKeyUp(t){if(!1!==this.enabled)switch(t.code){case"ArrowUp":case"KeyW":this.state.moveForward=!1;break;case"ArrowLeft":case"KeyA":this.state.moveLeft=!1;break;case"ArrowDown":case"KeyS":this.state.moveBackward=!1;break;case"ArrowRight":case"KeyD":this.state.moveRight=!1;break;case"KeyI":case"KeyJ":case"KeyK":case"KeyL":this.state.canRotate=!1;break;case"KeyQ":this.state.moveUp=!1;break;case"KeyE":this.state.moveDown=!1}}onDblClick(t){if(!0===this.dblClickForward){const[e]=this.ssp.viewport.getIntersects(t);if(e){const{point:t}=e;t.y+=this.eyeHeight,t.sub(this.camera.position),this._dblVector.copy(t),this._dblDeltaVector.set(0,0,0),this.ssp.render()}}}onPointerDown(t){null===this._pointerId&&0===t.button&&(this._pointerId=t.pointerId,this.state.canRotate=!0)}onPointerMove(t){if(this.enabled&&this.state.canRotate){let e=t.movementY,s=t.movementX;this.reverseRotate&&(s=-s,e=-e),this.movement.x=s,this.movement.y=e,this.ssp.render()}}onPointerUp(t){null!==this._pointerId&&(this._pointerId=null,this.state.canRotate=!1)}clearClashCache(){this.kneeInterObject=null,this.eyeInterObject=null}onClashCheck(t,e){const s=e.length(),i=e.clone().divideScalar(s);i.distanceToSquared(this.lastDirection)>1e-9&&this.clearClashCache(),this.lastDirection=i;const{eyeHeight:n,kneeHeight:o,camera:r,clashCheckDistance:h,clashDistance:c,clashLayers:p}=this;let{kneeInterObject:d,eyeInterObject:m}=this;if(!d){const e=t.clone().setY(t.y-n+o),s=new a(e,i,0,h);s.firstHitOnly=!0,null!=p&&l(s.layers,p),s.camera=r;const c=this.getCheckedObjects(e),m=s.intersectObjects(c);this.kneeInterObject=d=m[0]}let v=-s;if(d&&(v+=d.distance,v<c))return!0;if(!m){const e=new a(t,i,0,h);e.firstHitOnly=!0,null!=p&&l(e.layers,p),e.camera=r;const s=this.getCheckedObjects(t),n=e.intersectObjects(s);this.eyeInterObject=m=n[0]}let y=-s;if(m){if(y+=m.distance,y<c)return!0;m.distance=y}return d&&(d.distance=v),!1}getCheckedObjects(t){const{clashDistance:e,clashCheckDistance:s,searchRadiusFactor:i,clashFilter:a}=this,n=s*i,o=this.checkedSphere,r=n+e;o.set(t,r);const h=null!=a?a:function(){return!0};return this.viewport.scener.intersectsList.getAll().filter((t=>!!h(t)&&c(o,t)))}getGravityCheckedObjects(e,s){const i=this.gravityCheckedBox;let a=this.gravityCheckedObjects;if(a){const t=e.clone();t.y=s,i.containsPoint(e)&&i.containsPoint(t)||(a=null)}if(!a){const{eyeHeight:s,clashCheckDistance:n,gravitySearchFactor:o,clashDistance:r,clashFilter:h}=this,l=n+r,p=new t(l,l,0),d=e.clone().add(p),m=e.clone().sub(p);m.y-=s*o,i.set(m,d);const v=this.viewport.scener.intersectsList.getAll(),y=null!=h?h:function(){return!0};a=v.filter((t=>!!y(t)&&c(i,t)))}return a}gravityClashCheck(e,s){var i;let o=this.gravityInterObject;if(o){const{object:s,face:a,instanceId:r}=o,h=null===(i=s.geometry)||void 0===i?void 0:i.getAttribute("position");if(h&&a){let i=o.facePoints;if(!i){let e=s.matrixWorld;if(null!=r){const t=new n;s.getMatrixAt(r,t),e=t.premultiply(e)}const{a:c,b:l,c:p}=a,d=new t(h.getX(c),h.getY(c),h.getZ(c));d.applyMatrix4(e),d.setY(0);const m=new t(h.getX(l),h.getY(l),h.getZ(l));m.applyMatrix4(e),m.setY(0);const v=new t(h.getX(p),h.getY(p),h.getZ(p));v.applyMatrix4(e),v.setY(0),o.facePoints=i=[d,m,v]}let c=i[2],l=null;const p=e.clone();p.y=0;i.every((t=>{const e=t.clone();e.sub(c);const s=p.clone();if(s.sub(c),e.cross(s),l){if(e.dot(l)<=0)return!1}return l=e,c=t,!0}))||(this.gravityInterObject=o=null)}}if(!o){const i=new a(e,new t(0,-1,0));i.firstHitOnly=!0;const n=this.clashLayers;null!=n&&l(i.layers,n),i.camera=this.camera;const r=this.getGravityCheckedObjects(e,s),h=i.intersectObjects(r);this.gravityInterObject=o=h[0]}return o}setOptions(e){const{position:s,rotation:i,moveSpeed:a,eyeHeight:n,kneeHeight:o,jumpHeight:r,enableClash:c,enableGravity:l,searchRadiusFactor:p,clashDistance:d,clashCheckDistance:m,gravitySpeed:v,gravitySearchFactor:y,reverseRotate:u,rotate:b,rotateSpeed:g,horizontalRotate:w,verticalRotate:k,dblClickForward:f,clashFilter:C,clashLayers:D}=e;if(n){const e=this.eyeHeight;this.eyeHeight=n;const s=null==e?n:n-e;this.camera.position.add(new t(0,s,0))}o&&(this.kneeHeight=o),r&&(this.jumpHeight=r),p&&(this.searchRadiusFactor=p),d&&(this.clashDistance=d),m&&(this.clashCheckDistance=m),v&&(this.gravitySpeed=v),y&&(this.gravitySearchFactor=y),null!=u&&(this.reverseRotate=u),null!=b&&(this.rotate=b),null!=w&&(this.horizontalRotate=w),null!=k&&(this.verticalRotate=k),h.utils.isBoolean(f)&&(this.dblClickForward=f),h.utils.isNumber(g)&&(this.rotateSpeed=g),null!=c&&(this.enableClash=c),null!=l&&(this.enableGravity=l),null!=C&&(this.clashFilter=C),null!=D&&(this.clashLayers=D),s&&(this.camera.position.set(s.x,s.y+this.eyeHeight,s.z),this.gravityInterObject=null,this.clearClashCache()),i&&this.camera.rotation.set(i.x,i.y,i.z),a&&(this.moveSpeed=a),this.ssp.signals.cameraChange.dispatch(this.camera.position.clone())}start(t){this.viewport.controls.saveState(),this.viewport.controls.enabled=!1,this.enabled=!0,this.viewport.cameraManager.setCurrentCamera(this.camera),this.setOptions(t),this.viewport.postRender.set("FirstPersonControls",this.update.bind(this)),this.ssp.signals.dblClick.add(this.onDblClick),this.ssp.signals.keyDown.add(this.onKeyDown),this.ssp.signals.keyUp.add(this.onKeyUp);const e=this.viewport.container;e.addEventListener("pointerdown",this.onPointerDown),e.addEventListener("pointermove",this.onPointerMove),e.addEventListener("pointerup",this.onPointerUp)}stop(){this.viewport.controls.reset(),this.viewport.controls.enabled=!0,this.enabled=!1,this.viewport.cameraManager.setCurrentCamera(this.viewport.cameraManager.mainCamera),this.viewport.postRender.delete("FirstPersonControls"),this.ssp.signals.dblClick.remove(this.onDblClick),this.ssp.signals.keyDown.remove(this.onKeyDown),this.ssp.signals.keyUp.remove(this.onKeyUp);const t=this.viewport.container;t.removeEventListener("pointerdown",this.onPointerDown),t.removeEventListener("pointermove",this.onPointerMove),t.removeEventListener("pointerup",this.onPointerUp),this.ssp.render()}update(){if(!this.enabled)return;const{delta:e}=this.viewport.state,s=new t,{state:i,camera:a,eyeHeight:n,kneeHeight:h}=this,c=20*this.moveSpeed,l=20*this.gravitySpeed;let p=!1;i.moveForward&&(s.z-=c),i.moveBackward&&(s.z+=c),i.moveLeft&&(s.x-=c),i.moveRight&&(s.x+=c),i.moveUp&&(s.y+=2*l),i.moveDown&&(s.y-=2*l),s.multiplyScalar(e);const d=new o(0,0,0,"YXZ");d.setFromQuaternion(a.quaternion);const{x:m,y:v}=this.movement,y=this.horizontalRotate&&0!==m,u=this.verticalRotate&&0!==v;if(this.rotate&&i.canRotate&&(y||u)){u&&(d.x-=.003*v*this.rotateSpeed),y&&(d.y-=.003*m*this.rotateSpeed);const{max:t,min:e}=this.rotationAngle;d.x=Math.min(t,Math.max(d.x,e)),a.quaternion.setFromEuler(d),p=!0}if(0!==d.y&&!s.equals(new t)){const e=new r;e.setFromAxisAngle(new t(0,1,0),d.y),s.applyQuaternion(e)}if(!this._dblVector.equals(new t)){const t=this._dblVector.clone().multiplyScalar(e);this._dblDeltaVector.add(t),this._dblDeltaVector.length()>this._dblVector.length()?(this._dblVector.set(0,0,0),this._dblDeltaVector.set(0,0,0)):s.add(t)}const b=a.position.clone();if(!s.equals(new t)&&(!this.enableClash||!this.onClashCheck(a.position,s))&&(b.add(s),this.gravityInterObject)){const t=this.gravityInterObject.point.clone().sub(b);t.y=0,t.length()>h&&(this.gravityInterObject=null)}let g=b.y;if(this.enableGravity){const t=g;this.jumpOffset>0&&(this.jumpOffset-=l*e,g+=2*l*e),g-=l*e,i.canJump=!1;const s=this.gravityClashCheck(b,g);if(s){const t=s.point.y+n;g<t&&(g=t,this.jumpOffset=0,i.canJump=!0)}t!==g&&this.clearClashCache()}b.y=g;const w=!a.position.equals(b);w&&a.position.copy(b),(w||p)&&this.ssp.signals.cameraChange.dispatch(this.camera.position.clone())}}export{p as default};
