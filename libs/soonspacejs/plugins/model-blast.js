import{Box3 as s,Vector3 as t}from"three";class e{constructor(s){this.ssp=s,this.object=null,this.scalar=100}start(e,a){this.object=e,a&&(this.scalar=a);const o=(new s).expandByObject(e),i=(new t).addVectors(o.max,o.min).multiplyScalar(.5);e.traverse((e=>{if("Mesh"===e.type||"BaseMesh"===e.type){if(!e.userData.worldDir){const a=new s;a.setFromObject(e);const o=(new t).addVectors(a.max,a.min).multiplyScalar(.5);e.userData.worldDir=(new t).subVectors(o,i).normalize(),e.userData.oldPosition=e.position.clone()}e.position.copy((new t).copy(e.userData.oldPosition).add((new t).copy(e.userData.worldDir).multiplyScalar(this.scalar)))}})),this.ssp.signals.objectChanged.dispatch()}stop(s){const t=s||this.object;null==t||t.traverse((s=>{"Mesh"!==s.type&&"BaseMesh"!==s.type||!s.userData.oldPosition||(s.position.copy(s.userData.oldPosition),delete s.userData.worldDir,delete s.userData.oldPosition)})),this.object=null,this.scalar=100,this.ssp.signals.objectChanged.dispatch()}}export{e as default};
