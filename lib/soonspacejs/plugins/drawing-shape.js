const s="drawingCanvas",i="drawingPoint",t="drawingLine",e="drawingPolygon",n="drawingCircle";class a{constructor(s){this.ssp=s,this.drawingLayer=21,this.viewport=s.viewport}getFirstIntersect(s,i){const t=(Array.isArray(i)?i:i?[i]:[]).filter((s=>s));this.configLayer(t);const e=this.ssp.viewport.getIntersects(s);return this.recoverLayer(t),e[0]}configLayer(s){var i;const t=null!==(i=this.drawingLayer)&&void 0!==i?i:21,e=this.ssp.viewport.camera;e.oriMask=e.layers.mask,e.layers.enable(t);const n=Array.isArray(s)?s:[s];for(const s of n)s.oriMask=s.layers.mask,s.layers.set(t)}recoverLayer(s){this.drawingLayer;const i=this.ssp.viewport.camera;i.oriMask&&(i.layers.mask=i.oriMask,i.oriMask=void 0);const t=Array.isArray(s)?s:[s];for(const s of t){const i=s.oriMask;i&&(s.layers.mask=i,s.oriMask=void 0)}}drawingPoint(t,e){return new Promise(((n,a)=>{this.clearDrawingCanvas3D();const o=this.ssp.createCanvas3D({id:s,points:[Object.assign(Object.assign({},t),{id:i})]});this.ssp.addObject(o);const c=o.getPoint(i);if(!c)return a();const r=s=>{if(!c)return;const i=this.getFirstIntersect(s,c),t=i?i.point.clone():this.ssp.getPositionByOffset(s);c.setOptions({position:t})},l=s=>{if(h(),!c)return;const i=this.getFirstIntersect(s,c),e=i?i.point.clone():this.ssp.getPositionByOffset(s);c.setOptions({position:e}),n(Object.assign(Object.assign({},t),{position:e.clone()}))},g=()=>{var s;this.clearDrawingCanvas3D(),h(),null===(s=null==e?void 0:e.onCancel)||void 0===s||s.call(e)},p=s=>{switch(s.code){case"Escape":g()}},h=()=>{this.ssp.signals.mouseMove.remove(r),this.ssp.signals.click.remove(l),this.ssp.signals.rightClick.remove(g),this.ssp.signals.keyUp.remove(p)};this.ssp.signals.mouseMove.add(r),this.ssp.signals.click.add(l),this.ssp.signals.rightClick.add(g),this.ssp.signals.keyUp.add(p)}))}drawingLine(i,e){return new Promise((n=>{this.clearDrawingCanvas3D();const a=this.ssp.createCanvas3D({id:s,lines:[Object.assign(Object.assign({},i),{points:[],id:t})]});this.ssp.addObject(a);const o=a.getLine(t),c=[],r=s=>{const t=this.getFirstIntersect(s,o),e=t?t.point.clone():this.ssp.getPositionByOffset(s);o&&o.setOptions(Object.assign(Object.assign({},i),{points:[...c,e.clone().setY(e.y+1)]}))},l=s=>{const t=this.getFirstIntersect(s,o),e=t?t.point.clone():this.ssp.getPositionByOffset(s);c.push(e.clone().setY(e.y+1)),o&&o.setOptions(Object.assign(Object.assign({},i),{points:c}))},g=()=>{var s;c.pop(),o&&(o.setOptions(Object.assign(Object.assign({},i),{points:c})),null===(s=null==e?void 0:e.onCancelPrev)||void 0===s||s.call(e))},p=s=>{const t=this.getFirstIntersect(s,o),e=t?t.point.clone():this.ssp.getPositionByOffset(s);c.push(e.clone().setY(e.y+1)),d(),n(Object.assign(Object.assign({},i),{points:c}))},h=s=>{var i;switch(s.code){case"Backspace":g();break;case"Escape":this.clearDrawingCanvas3D(),d(),null===(i=null==e?void 0:e.onCancel)||void 0===i||i.call(e)}},d=()=>{this.ssp.signals.mouseMove.remove(r),this.ssp.signals.click.remove(l),this.ssp.signals.rightClick.remove(g),this.ssp.signals.dblClick.remove(p),this.ssp.signals.keyUp.remove(h)};this.ssp.signals.mouseMove.add(r),this.ssp.signals.click.add(l),this.ssp.signals.rightClick.add(g),this.ssp.signals.dblClick.add(p),this.ssp.signals.keyUp.add(h)}))}drawingPolygon(i,n){return new Promise((a=>{this.clearDrawingCanvas3D();const o=this.ssp.createCanvas3D({id:s,polygons:[Object.assign(Object.assign({points:[],yHeight:0},i),{id:e})],lines:[Object.assign(Object.assign({points:[],width:2},i),{id:t})]});this.ssp.addObject(o);const c=o.getPolygon(e),r=o.getLine(t),l=[],g=s=>{var i;const e=this.getFirstIntersect(s,[r,c]),n=e?e.point.clone():this.ssp.getPositionByOffset(s);if(!c)return;const a=[...l,n];a.length>2?o.removeLine(t):null==r||r.setOptions({points:a}),c.setOptions({yHeight:((null===(i=l[0])||void 0===i?void 0:i.y)||n.y)+1,points:a})},p=s=>{var t;const e=this.getFirstIntersect(s,[r,c]),n=e?e.point.clone():this.ssp.getPositionByOffset(s);l.push(n.clone().setY(n.y+1)),c&&c.setOptions(Object.assign(Object.assign({},i),{yHeight:((null===(t=l[0])||void 0===t?void 0:t.y)||0)+1,points:l}))},h=()=>{var s,t;l.pop(),c&&(c.setOptions(Object.assign(Object.assign({},i),{yHeight:((null===(s=l[0])||void 0===s?void 0:s.y)||0)+1,points:l})),null===(t=null==n?void 0:n.onCancelPrev)||void 0===t||t.call(n))},d=s=>{var t;const e=this.getFirstIntersect(s,[r,c]),n=e?e.point.clone():this.ssp.getPositionByOffset(s);l.push(n.clone().setY(n.y+1)),y(),a(Object.assign(Object.assign({},i),{yHeight:((null===(t=l[0])||void 0===t?void 0:t.y)||0)+1,points:l}))},v=s=>{var i;switch(s.code){case"Backspace":h();break;case"Escape":this.clearDrawingCanvas3D(),y(),null===(i=null==n?void 0:n.onCancel)||void 0===i||i.call(n)}},y=()=>{this.ssp.signals.mouseMove.remove(g),this.ssp.signals.click.remove(p),this.ssp.signals.rightClick.remove(h),this.ssp.signals.dblClick.remove(d),this.ssp.signals.keyUp.remove(v)};this.ssp.signals.mouseMove.add(g),this.ssp.signals.click.add(p),this.ssp.signals.rightClick.add(h),this.ssp.signals.dblClick.add(d),this.ssp.signals.keyUp.add(v)}))}drawingCircle(i,t){return new Promise((e=>{this.clearDrawingCanvas3D();const a=this.ssp.createCanvas3D({id:s,circles:[Object.assign(Object.assign({},i),{id:n})]});this.ssp.addObject(a);const o=a.getCircle(n);let c,r=100;const l=s=>{if(!o||!c)return;const i=this.getFirstIntersect(s,o),t=i?i.point.clone():this.ssp.getPositionByOffset(s);r=t.distanceTo(c),o.setOptions({position:c,radius:r})},g=s=>{if(!o)return;const t=this.getFirstIntersect(s,o),n=t?t.point.clone():this.ssp.getPositionByOffset(s);c?(d(),r=n.distanceTo(this.ssp.utils.IVector3ToVector3(c)),o.setOptions({position:c,radius:r}),e(Object.assign(Object.assign({},i),{position:c,radius:r}))):c=n.clone().setY(n.y+1)},p=()=>{var s;this.clearDrawingCanvas3D(),d(),null===(s=null==t?void 0:t.onCancel)||void 0===s||s.call(t)},h=s=>{switch(s.code){case"Escape":p()}},d=()=>{this.ssp.signals.mouseMove.remove(l),this.ssp.signals.click.remove(g),this.ssp.signals.rightClick.remove(p),this.ssp.signals.keyUp.remove(h)};this.ssp.signals.mouseMove.add(l),this.ssp.signals.click.add(g),this.ssp.signals.rightClick.add(p),this.ssp.signals.keyUp.add(h)}))}clearDrawingCanvas3D(){this.ssp.removeObjectById(s)}}export{a as default};
